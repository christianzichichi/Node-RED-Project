#include "Timer.h"

module SensorTestC {

  uses {
	interface Boot;
  	interface Timer<TMilli> as MilliTimer;
	interface Read<uint16_t> as TempRead;
	interface Read<uint16_t> as HumRead;
	interface SplitControl as AMControl;	
 }

} implementation {
  uint8_t counter=0;
  uint8_t rec_id;
  
  //***************** Boot interface ********************//
  event void Boot.booted() {
	dbg("boot","Application booted.\n");
	call AMControl.start(); 
  }
  event void AMControl.startDone(error_t err){
        call MilliTimer.startPeriodic( 1000 );  
  }
  event void AMControl.stopDone(error_t err){};

  //***************** MilliTimer interface ********************//
  event void MilliTimer.fired() {
	call TempRead.read();
	call HumRead.read();
  }
  
  //************************* Read interface **********************//
  event void TempRead.readDone(error_t result, uint16_t data) {
	float temp = ((float)data/65535)*100;
	dbg("boot","temp read done %.2f\n",temp);
  }

  event void HumRead.readDone(error_t result, uint16_t data) {
	float hum = ((float)data/65535)*100;
	dbg("boot","hum read done %.2f\n",hum);
  }

}

